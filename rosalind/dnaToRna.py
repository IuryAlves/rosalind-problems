__author__ = 'iury'

import unittest

'''
Problem

An RNA string is a string formed from the alphabet containing 'A', 'C', 'G', and 'U'.

Given a DNA string t corresponding to a coding strand, its transcribed RNA string u is formed by replacing all occurrences of 'T' in t with 'U' in u.

Given: A DNA string t having length at most 1000 nt.

Return: The transcribed RNA string of t.
'''


def dnaToRna(stringDna):
    return (stringDna.replace('T', 'U') )


class Test(unittest.TestCase):
    def test1(self):
        self.assertEqual('GAUGGAACUUGACUACGUAAAUU', dnaToRna('GATGGAACTTGACTACGTAAATT'))

    def test2(self):
        self.assertEqual('GGGAAAUUUCCCCCUUGUGGAACCUUUAACCGG', dnaToRna('GGGAAATTTCCCCCTTGTGGAACCTTTAACCGG'))

    def test3(self):
        self.assertEqual(
            'GCCCCGCGUGUGUUGUUACGUAGUCGAUCUGUGCAGUACUUCAAAGCAGUCGUGCAUCUCCCUAGCCACGGCCUGUCCUGGAGUCACACAUAAUGGAUCAAAUUUGCUCCCGGAUACUUUGAGCCAGAUCGCACUAAAUAAGGCACGGGGGUUGGUGCCGCAGUUGUAUAACUGUUCCGUAGUCCGCAAUUGCUUCUAUCAGAGUUUUCCUCAAAAGACCCUACAUCUCAAAGUUAUGUAACACCGGGUACACACGGAGAUCUUUAGUAAUCUAAGCGACAACAUGUAACCCAUUGGUUCGGCGGUUUGCUGCGCCACACCCGCGGCUCGGUCUGUCUCCUUGGUAAAUUGUUUUUCUCACGCGUUCACUUCACAGCUAUUAUAAACAUGUUGGGUCCUAAAUAGCAAGAGUGUUGUUACUUAACAUCCCAGCGGCGUGUUAUAAAGAUAGAGCGAGGCAAUGCUGAAACACUUUGCUCAGAUUGAUCGUACACCUUUCCCUCCGCCCUCCUGGAACGGGGACCACAGUGUAUGGAUAGUGCACGUAGCGUAUUGCUACGGCCAUAGUAUGCCCAUUUCACUAAUCCGAAUGUGAAGACAUUUGCUCGCAGGAAACAGAGGAUGACACUCCAUCGAGGGCCAGCCUACGUUGUCUCAGAGGGGCAACAAAUCUCGCCCAGGGCAGGGUGGGGAUUCUGGAACGACUGCGGUUUACAGGUCGGUACGUCCCUGACAUCUGGAUCGACGUCCCAGCGUCUCAAGACAUUUAUGGAGUCUGCGCAAUCUCUGAUGAAUUGUUCUCAUUUUAGUCAUCCCGUGCGGUCGCUCCGAGCAUUCUGCAUUGCAGGAUCCGUGUCCCUCCUUAAUUGUGUAUGCGGCGGUGCACUCCCCGAUAAUCCGGUGGCUUCCUUGUGUAUCUCGCUCUGUCGGCAUCAUGCGUUUAAUAGCUUCGGGUCUAGGUUCGUAGCAGCGGUCCCUUA',
            dnaToRna(
                'GCCCCGCGTGTGTTGTTACGTAGTCGATCTGTGCAGTACTTCAAAGCAGTCGTGCATCTCCCTAGCCACGGCCTGTCCTGGAGTCACACATAATGGATCAAATTTGCTCCCGGATACTTTGAGCCAGATCGCACTAAATAAGGCACGGGGGTTGGTGCCGCAGTTGTATAACTGTTCCGTAGTCCGCAATTGCTTCTATCAGAGTTTTCCTCAAAAGACCCTACATCTCAAAGTTATGTAACACCGGGTACACACGGAGATCTTTAGTAATCTAAGCGACAACATGTAACCCATTGGTTCGGCGGTTTGCTGCGCCACACCCGCGGCTCGGTCTGTCTCCTTGGTAAATTGTTTTTCTCACGCGTTCACTTCACAGCTATTATAAACATGTTGGGTCCTAAATAGCAAGAGTGTTGTTACTTAACATCCCAGCGGCGTGTTATAAAGATAGAGCGAGGCAATGCTGAAACACTTTGCTCAGATTGATCGTACACCTTTCCCTCCGCCCTCCTGGAACGGGGACCACAGTGTATGGATAGTGCACGTAGCGTATTGCTACGGCCATAGTATGCCCATTTCACTAATCCGAATGTGAAGACATTTGCTCGCAGGAAACAGAGGATGACACTCCATCGAGGGCCAGCCTACGTTGTCTCAGAGGGGCAACAAATCTCGCCCAGGGCAGGGTGGGGATTCTGGAACGACTGCGGTTTACAGGTCGGTACGTCCCTGACATCTGGATCGACGTCCCAGCGTCTCAAGACATTTATGGAGTCTGCGCAATCTCTGATGAATTGTTCTCATTTTAGTCATCCCGTGCGGTCGCTCCGAGCATTCTGCATTGCAGGATCCGTGTCCCTCCTTAATTGTGTATGCGGCGGTGCACTCCCCGATAATCCGGTGGCTTCCTTGTGTATCTCGCTCTGTCGGCATCATGCGTTTAATAGCTTCGGGTCTAGGTTCGTAGCAGCGGTCCCTTA'))


if __name__ == '__main__':
    unittest.main()




